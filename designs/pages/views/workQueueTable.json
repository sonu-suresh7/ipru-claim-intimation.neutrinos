[
    {
        "id": "sd_ORBEdSieDFflBBqS",
        "type": "tab",
        "createdDate": "2022-05-10T11:01:30.355Z",
        "label": "workQueueTable",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_j7hUkvhLLaQEvwFf",
        "type": "OnInit",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "start",
        "name": "",
        "inputVariables": [
            {
                "key": "wq",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                }
            },
            {
                "key": "selfIndex",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                }
            }
        ],
        "localVariables": [],
        "outputVariables": [
            {
                "key": "taskClicked",
                "defaultValue": {
                    "type": "any",
                    "value": null
                }
            }
        ],
        "functionName": "sd_j7hUkvhLLaQEvwFf",
        "category": "Lifecycle Events",
        "x": 85,
        "y": 60,
        "wires": [
            [
                "sd_Zgv6GexufrJPaHz3"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_Zgv6GexufrJPaHz3",
        "type": "PageVariables",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [],
        "functionName": "sd_Zgv6GexufrJPaHz3",
        "category": "Function",
        "x": 225,
        "y": 60,
        "wires": [
            [
                "sd_ev8heFcdcZxd4P7L"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_CfNBnwa5C9bGaInY",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "sort",
        "script": "const compare = (a, b, isAsc) => (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n// const conf = bh.pageInput.wq;\nconst sort = bh.input.s;\nif (!sort.active || sort.direction === '') {\n    page.sortedTasks = page.tasks.slice();\n} else {\n    page.sortedTasks = page.tasks.sort((a, b) => {\n        if (a[sort.active]) {\n            return compare(a[sort.active], b[sort.active], sort.direction === 'asc')\n        }\n        return 0\n    })\n}\n\n// conf.sortedTasks = new MatTableDataSource(conf.tasks);\n// conf.sortedTasks.sort = this.MatSort\n// conf.sortedTasks.paginator = this.MatPaginator\n",
        "functionName": "sort",
        "category": "Function",
        "x": 725,
        "y": 460,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_y3ed9YmlbacGbQv9",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "sort change",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "s",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "sortChange",
        "category": "General",
        "x": 725,
        "y": 560,
        "wires": [
            [
                "sd_CfNBnwa5C9bGaInY"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_RcKWlQAPcmK8R1Ei",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "toggleTaskLock",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "task",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            },
            {
                "key": "lockStatus",
                "defaultValue": {
                    "type": "bool",
                    "value": "true"
                },
                "output": false
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "toggleTaskLock",
        "category": "General",
        "x": 85,
        "y": 200,
        "wires": [
            [
                "sd_GLaOLcgKG6Qywj9x"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_MatW4h2tsQJQoZ3Y",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "prep request",
        "script": "bh.local.body = {\n    taskId: bh.input.task['task-id'],\n    containerId: bh.input.task['task-container-id'],\n}\nbh.local.url = `${page.system.environment.properties.ssdBaseUrl}/task/${bh.input.lockStatus ? 'lock' : 'unlock'}`;",
        "functionName": "prepRequest",
        "category": "Function",
        "x": 365,
        "y": 200,
        "wires": [
            [
                "sd_bIaFu2ut7YTNghEe"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_bIaFu2ut7YTNghEe",
        "type": "HttpRequest",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "request change lock",
        "method": "patch",
        "methodMapping": "",
        "methodMappingObj": {},
        "urlMapping": "bh.local.url",
        "urlMappingObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "url"
        },
        "ret": "json",
        "retMapping": "",
        "retMappingObj": {},
        "observe": "",
        "observeMapping": "",
        "observeMappingObj": {},
        "reportProgress": false,
        "withCreds": false,
        "reqBody": "bh.local.body",
        "reqBodyObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "body"
        },
        "resultMapping": "bh.local.res",
        "resultMappingObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "res"
        },
        "headers": {},
        "headersObj": [],
        "headerMapping": "",
        "headerMappingObj": {},
        "params": {},
        "paramsObj": [],
        "paramMapping": "",
        "paramMappingObj": {},
        "functionName": "requestChangeLock",
        "category": "HTTP",
        "x": 505,
        "y": 200,
        "wires": [
            [
                "sd_NZPoxitEmZVLZj5C"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_NZPoxitEmZVLZj5C",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "update task lock",
        "script": "bh.input.task['task-status'] = bh.input.lockStatus ? 'InProgress' : 'Reserved';",
        "functionName": "updateTaskLock",
        "category": "Function",
        "x": 625,
        "y": 200,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_f8d4io6jUoDkDNuM",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "get tasks",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "getTasks",
        "category": "General",
        "x": 85,
        "y": 460,
        "wires": [
            [
                "sd_HqpKFLyvNKvfMtTb"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_HqpKFLyvNKvfMtTb",
        "type": "PageCallService",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "call csd get q tasks",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "sd_IKMMWVWnX2MWpoSX",
            "type": "tab",
            "createdDate": "2022-03-21T14:08:29.053Z",
            "label": "wq",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_Mwmnxvd5AMvCxFbP",
            "flowName": "getQTasks"
        },
        "inputVariables": [
            {
                "key": "wqConf",
                "map": true,
                "valueType": "bh",
                "value": "pageInput.wq.conf"
            }
        ],
        "outputMapping": [
            {
                "mapVarType": "local",
                "key": "reponsePayload",
                "valueType": "bh.local",
                "value": "reponsePayload",
                "mapVarName": "reponsePayload",
                "localVar": "bh.local.reponsePayload"
            }
        ],
        "serviceImportPath": "app/sd-services/wq",
        "startName": "getQTasks",
        "inputParams": [
            "bh.pageInput.wq.conf"
        ],
        "accept_bh": false,
        "accept_csd": true,
        "functionName": "callCsdGetQTasks",
        "category": "General",
        "x": 225,
        "y": 460,
        "wires": [
            [
                "sd_NByCPbY14asbBK6N"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_NByCPbY14asbBK6N",
        "type": "UseDependency",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "ng collections import",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "SelectionModel",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            }
        ],
        "import_all": false,
        "library": "@angular/cdk/collections",
        "serviceDesignerType": "pages",
        "functionName": "ngCollectionsImport",
        "category": "Function",
        "x": 365,
        "y": 460,
        "wires": [
            [
                "sd_TCpvc4pL0lt0H5fI"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_vvqMhtjDcXNbpJnI",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "assign wq tasks",
        "script": "const tasks = [];\nconst wqconf = this.wq.conf;\nconst validColumns = wqconf.selectedColumns.filter(c => page.colConf.hasOwnProperty(c));\nfor (const task of bh.local.reponsePayload.tasks) {\n\tif (task[\"task-proc-def-id\"] !== 'com.neutrinos.manulife.maxBusiness') {\n\t\tcontinue;\n\t}\n\tconst obj = JSON.parse(JSON.stringify(task))\n\tObject.assign(obj, validColumns?.reduce((acc, cur) => {\n\t\tacc[cur] = page.colConf[cur].val(task) || '-';\n\t\treturn acc;\n\t}, {}))\n\ttasks.push(obj);\n}\n\npage.tasks = tasks;\n// page.displayColumns = ['lock_unlock', ...validColumns, 'action'];\npage.displayColumns = [...validColumns];\npage.sortedTasks = tasks.slice();\npage.selection = new SelectionModel(true, []);\n\n// if (page.USER_ROLE === 'ADMIN') {\n// \tpage.displayColumns.unshift('selection')\n// }\n\nbh.input.s = ({\n\tactive: 'task-priority',\n\tdirection: 'asc'\n})\n\nsetTimeout(() => {\n\tthis.sortChange({\n\t\tactive: 'task-created-on',\n\t\tdirection: 'asc'\n\t})\n})",
        "functionName": "assignWqTasks",
        "category": "Function",
        "x": 605,
        "y": 460,
        "wires": [
            [
                "sd_CfNBnwa5C9bGaInY"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_ev8heFcdcZxd4P7L",
        "type": "PageServiceVariables",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "get",
        "globalVariables": [
            {
                "textIp": "columns",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "colConf"
                }
            },
            {
                "textIp": "loggedInRole",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "USER_ROLE"
                }
            }
        ],
        "functionName": "sd_ev8heFcdcZxd4P7L",
        "service": {
            "id": "sd_RbD2RZwzan9VSOEL",
            "type": "tab",
            "createdDate": "2022-03-10T07:40:30.532Z",
            "label": "cache",
            "disabled": false,
            "info": "",
            "functionSeq": 0,
            "generateNext": true,
            "serviceName": "cache",
            "relativeParentPath": "",
            "_def": {
                "defaults": {
                    "label": {
                        "value": ""
                    },
                    "disabled": {
                        "value": false
                    },
                    "info": {
                        "value": ""
                    }
                }
            }
        },
        "serviceImportPath": "app/sd-services/cache",
        "category": "Function",
        "x": 365,
        "y": 60,
        "wires": [
            [
                "sd_FStdBD2U0x0kBzrT"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_fROdtKKpMlKZtTl8",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "col computer conf",
        "script": "page.colConf = {\n    applicationNumber: {\n        val: task => task.applicationNumber,\n        get label() {\n            return page.locales.keys.policyNumber\n        }\n    },\n    applicationDate: {\n        val: task => formatDate(new Date(task['task-created-on']['java.util.Date']), 'dd/MM/yyyy', 'en'),\n        get label() {\n            return page.locales.keys.applicationDate\n        }\n    },\n    customerName: {\n        val: task => task.customerName,\n        get label() {\n            return page.locales.keys.customerName\n        }\n    },\n    productName: {\n        val: task => task.productName,\n        get label() {\n            return page.locales.keys.productName\n        }\n    },\n    sourceOfBusiness: {\n        val: task => task.sourceOfBusiness,\n        get label() {\n            return page.locales.keys.channel\n        }\n    },\n    sumInsured: {\n        val: task => task.sumInsured,\n        get label() {\n            return page.locales.keys.sumInsured\n        }\n    },\n    claimNo: {\n        val: task => task.claimNo,\n        get label() {\n            return page.locales.keys.claimNo\n        }\n    },\n    policyNo: {\n        val: task => task.PolicyNo,\n        get label() {\n            return page.locales.keys.policyNo\n        }\n    },\n    policyStatus: {\n        val: task => task.policyStatus,\n        get label() {\n            return page.locales.keys.ploicyStatus\n        }\n    },\n    otherClaims: {\n        val: 'No',\n        get label() {\n            return page.locales.keys.otherClaims\n        }\n    },\n    'task-created-on': {\n        val: task => formatDate(new Date(task['task-created-on']['java.util.Date']), 'dd/MM/yyyy', 'en'),\n        get label() {\n            return page.locales.keys.createdOn\n        },\n    },\n    'task-actual-owner': {\n        val: task => task['task-actual-owner'],\n        get label() {\n            return page.locales.keys.underwriter\n        },\n    },\n    'task-container-id': {\n        val: task => task['task-container-id'],\n        get label() {\n            return page.locales.keys.taskContainerId\n        }\n    },\n    'task-priority': {\n        val: task => task['task-priority'],\n        get label() {\n            return page.locales.keys.priority\n        }\n    },\n    'task-id': {\n        val: task => task['task-id'],\n        get label() {\n            return page.locales.keys.taskId\n        }\n    },\n    'task-status': {\n        val: task => task['task-status'],\n        get label() {\n            return page.locales.keys.status\n        }\n    },\n    'task-proc-inst-id': {\n        val: task => task['task-proc-inst-id'],\n        get label() {\n            return page.locales.keys.taskProcInstId\n        }\n    },\n    'task-name': {\n        val: task => task['task-name'],\n        get label() {\n            return page.locales.keys.taskName\n        }\n    },\n    'time-lapse': {\n        val: task => task['time-lapse'],\n        get label() {\n            return page.locales.keys.aging\n        }\n    }\n}\n",
        "functionName": "colComputerConf",
        "category": "Function",
        "x": 865,
        "y": 200,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true
    },
    {
        "id": "sd_zECDxsjrdZYnEoug",
        "type": "PageServiceVariables",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "get user role",
        "inputs": 1,
        "outputs": 1,
        "operation": "get",
        "globalVariables": [
            {
                "textIp": "loggedInRole",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "USER_ROLE"
                }
            }
        ],
        "functionName": "getUserRole",
        "service": {
            "id": "sd_RbD2RZwzan9VSOEL",
            "type": "tab",
            "createdDate": "2022-03-10T07:40:30.532Z",
            "label": "cache",
            "disabled": false,
            "info": "",
            "functionSeq": 0,
            "generateNext": true,
            "serviceName": "cache",
            "relativeParentPath": "",
            "_def": {
                "defaults": {
                    "label": {
                        "value": ""
                    },
                    "disabled": {
                        "value": false
                    },
                    "info": {
                        "value": ""
                    }
                }
            }
        },
        "serviceImportPath": "app/sd-services/cache",
        "category": "Function",
        "x": 905,
        "y": 120,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true
    },
    {
        "id": "sd_TCpvc4pL0lt0H5fI",
        "type": "UseDependency",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "ng common imports",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "formatDate",
                "typedIpValue": {
                    "type": "this.page",
                    "value": ""
                },
                "injectable": false
            }
        ],
        "import_all": false,
        "library": "@angular/common",
        "serviceDesignerType": "pages",
        "functionName": "ngCommonImports",
        "category": "Function",
        "x": 485,
        "y": 460,
        "wires": [
            [
                "sd_vvqMhtjDcXNbpJnI"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_dR0spMBQnFXIGG0E",
        "type": "0a527e77-2b6b-855b-557e-9f716099c2ed",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "start",
        "name": "",
        "eventName": "\"work-queue-table-selected\"",
        "functionName": "sd_dR0spMBQnFXIGG0E",
        "category": "Events",
        "x": 85,
        "y": 600,
        "wires": [
            [
                "sd_lrz2EQFeLIJvHVFB"
            ]
        ],
        "__ssdTypeInputs__": {
            "eventName": {
                "type": "str",
                "value": "work-queue-table-selected",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_h0qqDLBRszJHPoae",
        "type": "PageCallService",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "call get tasks",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "sd_ORBEdSieDFflBBqS",
            "type": "tab",
            "createdDate": "2022-05-10T11:01:30.355Z",
            "label": "workQueueTable",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_f8d4io6jUoDkDNuM",
            "flowName": "getTasks"
        },
        "inputVariables": [],
        "outputMapping": [],
        "serviceImportPath": "./workQueueTable",
        "startName": "getTasks",
        "inputParams": [],
        "accept_bh": false,
        "accept_csd": false,
        "functionName": "callGetTasks",
        "category": "General",
        "x": 485,
        "y": 600,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_lrz2EQFeLIJvHVFB",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "selectedIndex",
        "propertyType": "bh.local",
        "propertyGv": "bh.local.selectedIndex",
        "rules": [
            {
                "t": "se",
                "v": "this.selfIndex",
                "vt": "literal",
                "gv": "this.selfIndex"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "functionName": "sd_lrz2EQFeLIJvHVFB",
        "category": "Function",
        "x": 225,
        "y": 600,
        "wires": [
            [
                "sd_xvpYjoEjG0upoN2A"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_xvpYjoEjG0upoN2A",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "tasks",
        "propertyType": "this.page",
        "propertyGv": "this.page.tasks",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "functionName": "sd_xvpYjoEjG0upoN2A",
        "category": "Function",
        "x": 365,
        "y": 600,
        "wires": [
            [
                "sd_h0qqDLBRszJHPoae"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_bNfQHMgHVgPmmUMz",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "checkout",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "task",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "checkout",
        "category": "General",
        "x": 85,
        "y": 720,
        "wires": [
            [
                "sd_Wiz4a4WRdSP8xzue"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_Wiz4a4WRdSP8xzue",
        "type": "Output",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "eventName": "bh.pageOutput.taskClicked",
        "data": "bh.input.task",
        "functionName": "sd_Wiz4a4WRdSP8xzue",
        "category": "Function",
        "x": 225,
        "y": 720,
        "wires": [
            []
        ],
        "__ssdTypeInputs__": {
            "eventName": {
                "type": "bh.pageOutput",
                "value": "taskClicked",
                "constant": false
            },
            "data": {
                "type": "bh.input",
                "value": "task",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_FStdBD2U0x0kBzrT",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "page.taskStatus = {\n    tooltip(task) {\n        switch (task['task-status']) {\n            case 'InProgress':\n                return page.locales.keys.taskLocked\n            case 'Reserved':\n                return page.locales.keys.taskUnLocked\n            case 'Ready':\n                return page.locales.keys.taskNotLockable\n        }\n    },\n    icon(task) {\n        switch (task['task-status']) {\n            case 'InProgress':\n                return 'lock'\n            case 'Reserved':\n                return 'lock_open'\n            case 'Ready':\n                return ''\n        }\n    }\n}\n\npage.trackTask = (index, task) => `${task['task-container-id']}#${task['task-id']}`;",
        "functionName": "sd_FStdBD2U0x0kBzrT",
        "category": "Function",
        "x": 505,
        "y": 60,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_GLaOLcgKG6Qywj9x",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "if not in ready state",
        "property": "task['task-status']",
        "propertyType": "bh.input",
        "propertyGv": "bh.input.task['task-status']",
        "rules": [
            {
                "t": "sne",
                "v": "Ready",
                "vt": "str",
                "gv": "\"Ready\""
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "functionName": "ifNotInReadyState",
        "category": "Function",
        "x": 225,
        "y": 200,
        "wires": [
            [
                "sd_MatW4h2tsQJQoZ3Y"
            ],
            [
                "sd_tNFtiPfXmbOpRz47"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_tNFtiPfXmbOpRz47",
        "type": "SnackBar",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "message": {
            "type": "this.page",
            "value": "locales.keys.taskNotLockable"
        },
        "action": {
            "type": "str",
            "value": "Ok"
        },
        "duration": {
            "type": "num",
            "value": "2000"
        },
        "horizontalPosition": "center",
        "horizontalPositionMap": "",
        "verticalPosition": "bottom",
        "verticalPositionMap": "",
        "panelClass": {
            "type": "str",
            "value": ""
        },
        "direction": "ltr",
        "functionName": "sd_tNFtiPfXmbOpRz47",
        "category": "General",
        "x": 340,
        "y": 320,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_Vj9TuuNE82wAoBZn",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "isAllSelected",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [
            {
                "key": "isAllSelected",
                "defaultValue": {
                    "type": "any",
                    "value": "this.page.tasks.length === this.page.selection.selected.length"
                },
                "output": true
            }
        ],
        "flow_type": "sync",
        "functionName": "isAllSelected",
        "category": "General",
        "x": 85,
        "y": 980,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_suyZciT0YQ85qzSX",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "masterToggle",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "masterToggle",
        "category": "General",
        "x": 85,
        "y": 840,
        "wires": [
            [
                "sd_RM35bVXTyLrjVIzW"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_RM35bVXTyLrjVIzW",
        "type": "PageCallService",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "sd_ORBEdSieDFflBBqS",
            "type": "tab",
            "createdDate": "2022-05-10T11:01:30.355Z",
            "label": "workQueueTable",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_Vj9TuuNE82wAoBZn",
            "flowName": "isAllSelected"
        },
        "inputVariables": [],
        "outputMapping": [
            {
                "mapVarType": "local",
                "key": "isAllSelected",
                "valueType": "bh.local",
                "value": "isAllSelected",
                "mapVarName": "isAllSelected",
                "localVar": "bh.local.isAllSelected"
            }
        ],
        "serviceImportPath": "./workQueueTable",
        "startName": "isAllSelected",
        "inputParams": [],
        "accept_bh": false,
        "accept_csd": false,
        "functionName": "sd_RM35bVXTyLrjVIzW",
        "category": "General",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "sd_mjxZNjyciPEHHlTq"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_mjxZNjyciPEHHlTq",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "isAllSelected",
        "propertyType": "bh.local",
        "propertyGv": "bh.local.isAllSelected",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "functionName": "sd_mjxZNjyciPEHHlTq",
        "category": "Function",
        "x": 380,
        "y": 840,
        "wires": [
            [
                "sd_OB3n7dczFo7PF2hV"
            ],
            [
                "sd_THuIaCpZ5wtvfrbm"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_OB3n7dczFo7PF2hV",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "page.selection.clear()",
        "functionName": "sd_OB3n7dczFo7PF2hV",
        "category": "Function",
        "x": 560,
        "y": 840,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_THuIaCpZ5wtvfrbm",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "page.selection.select(...page.tasks)",
        "functionName": "sd_THuIaCpZ5wtvfrbm",
        "category": "Function",
        "x": 505,
        "y": 920,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_BD7RRaucwoFRxaUe",
        "type": "0a527e77-2b6b-855b-557e-9f716099c2ed",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "start",
        "name": "listen for reassign",
        "eventName": "\"work-queue-table-reassign\"",
        "functionName": "listenForReassign",
        "category": "Events",
        "x": 85,
        "y": 1140,
        "wires": [
            [
                "sd_3PoCICIB5x2L4h8i"
            ]
        ],
        "__ssdTypeInputs__": {
            "eventName": {
                "type": "str",
                "value": "work-queue-table-reassign",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_3PoCICIB5x2L4h8i",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "selectedIndex",
        "propertyType": "bh.local",
        "propertyGv": "bh.local.selectedIndex",
        "rules": [
            {
                "t": "se",
                "v": "this.selfIndex",
                "vt": "literal",
                "gv": "this.selfIndex"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "functionName": "sd_3PoCICIB5x2L4h8i",
        "category": "Function",
        "x": 225,
        "y": 1140,
        "wires": [
            [
                "sd_SVi8E7LpNf6Yc2F5"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_SVi8E7LpNf6Yc2F5",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "selection.selected.length",
        "propertyType": "this.page",
        "propertyGv": "this.page.selection.selected.length",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num",
                "gv": "0"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "functionName": "sd_SVi8E7LpNf6Yc2F5",
        "category": "Function",
        "x": 365,
        "y": 1140,
        "wires": [
            [
                "sd_GXuYQwO1qlSo5qcC"
            ],
            [
                "sd_Zx5Gm7LtzgWnoq9H"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_Zx5Gm7LtzgWnoq9H",
        "type": "SnackBar",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "message": {
            "type": "this.page",
            "value": "locales.keys.tasksNotAssignable"
        },
        "action": {
            "type": "str",
            "value": "Ok"
        },
        "duration": {
            "type": "num",
            "value": "2000"
        },
        "horizontalPosition": "center",
        "horizontalPositionMap": "",
        "verticalPosition": "bottom",
        "verticalPositionMap": "",
        "panelClass": {
            "type": "str",
            "value": ""
        },
        "direction": "ltr",
        "functionName": "sd_Zx5Gm7LtzgWnoq9H",
        "category": "General",
        "x": 465,
        "y": 1260,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_GXuYQwO1qlSo5qcC",
        "type": "OpenDialog",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "outputs": 4,
        "flow": {
            "flowId": "sd_x4je3BxNisr8hHdH",
            "label": "reassign"
        },
        "relativePath": "../modals/reassign",
        "data": "this.page",
        "ariaDescribedBy": "this.page",
        "ariaLabel": "this.page",
        "ariaLabelledBy": "this.page",
        "autoFocus": "this.page",
        "backdropClass": "this.page",
        "closeOnNavigation": "this.page",
        "direction": "this.page",
        "disableClose": "this.page",
        "hasBackdrop": "this.page",
        "height": "\"\"",
        "maxHeight": "this.page",
        "minHeight": "this.page",
        "width": "\"70vh\"",
        "maxWidth": "this.page",
        "minWidth": "this.page",
        "panelClass": "this.page",
        "position": "this.page",
        "restoreFocus": "this.page",
        "role": "this.page",
        "resultMapping": "bh.local.reassignUser",
        "functionName": "sd_GXuYQwO1qlSo5qcC",
        "category": "Dialog",
        "x": 525,
        "y": 1140,
        "wires": [
            [],
            [
                "sd_dDbfpTXgPhDtu8Y1"
            ],
            [],
            []
        ],
        "__ssdTypeInputs__": {
            "data": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "ariaDescribedBy": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "ariaLabel": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "ariaLabelledBy": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "autoFocus": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "backdropClass": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "closeOnNavigation": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "direction": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "disableClose": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "hasBackdrop": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "height": {
                "type": "str",
                "value": "",
                "constant": false
            },
            "maxHeight": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "minHeight": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "width": {
                "type": "str",
                "value": "70vh",
                "constant": false
            },
            "maxWidth": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "minWidth": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "panelClass": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "position": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "restoreFocus": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "role": {
                "type": "this.page",
                "value": "",
                "constant": false
            },
            "resultMapping": {
                "type": "bh.local",
                "value": "reassignUser",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_dJDXVyFGWPbVnJoe",
        "type": "Script",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "bh.local.body = {\n    user: bh.input.user,\n    tasks: page.selection.selected\n}\nbh.local.url = `${bh.system.environment.properties.ssdBaseUrl}/admin/tasks/assign`",
        "functionName": "sd_dJDXVyFGWPbVnJoe",
        "category": "Function",
        "x": 365,
        "y": 1380,
        "wires": [
            [
                "sd_7Wvm4DuZuCRpBxfk"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_Q5ww4RTU2TQxpLho",
        "type": "PageCallService",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "call get tasks 2",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "sd_ORBEdSieDFflBBqS",
            "type": "tab",
            "createdDate": "2022-05-10T11:01:30.355Z",
            "label": "workQueueTable",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_f8d4io6jUoDkDNuM",
            "flowName": "getTasks"
        },
        "inputVariables": [],
        "outputMapping": [],
        "serviceImportPath": "./workQueueTable",
        "startName": "getTasks",
        "inputParams": [],
        "accept_bh": false,
        "accept_csd": false,
        "functionName": "callGetTasks2",
        "category": "General",
        "x": 685,
        "y": 1380,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_7Wvm4DuZuCRpBxfk",
        "type": "HttpRequest",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "method": "post",
        "methodMapping": "",
        "methodMappingObj": {},
        "urlMapping": "bh.local.url",
        "urlMappingObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "url"
        },
        "ret": "json",
        "retMapping": "",
        "retMappingObj": {},
        "observe": "",
        "observeMapping": "",
        "observeMappingObj": {},
        "reportProgress": false,
        "withCreds": false,
        "reqBody": "bh.local.body",
        "reqBodyObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "body"
        },
        "resultMapping": "bh.local.res",
        "resultMappingObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "res"
        },
        "headers": {},
        "headersObj": [],
        "headerMapping": "",
        "headerMappingObj": {},
        "params": {},
        "paramsObj": [],
        "paramMapping": "",
        "paramMappingObj": {},
        "functionName": "sd_7Wvm4DuZuCRpBxfk",
        "category": "HTTP",
        "x": 525,
        "y": 1380,
        "wires": [
            [
                "sd_Q5ww4RTU2TQxpLho"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_a2M6z7UvrwJdwq7y",
        "type": "PageSwitch",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "property": "user",
        "propertyType": "bh.input",
        "propertyGv": "bh.input.user",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "functionName": "sd_a2M6z7UvrwJdwq7y",
        "category": "Function",
        "x": 225,
        "y": 1380,
        "wires": [
            [
                "sd_dJDXVyFGWPbVnJoe"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_wHdgOYnTLgQYYGG7",
        "type": "PageStart",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "start",
        "name": "assign to user",
        "outputs": 1,
        "inputVariables": [
            {
                "key": "user",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": false
            }
        ],
        "localVariables": [],
        "flow_type": "sync",
        "functionName": "assignToUser",
        "category": "General",
        "x": 85,
        "y": 1380,
        "wires": [
            [
                "sd_a2M6z7UvrwJdwq7y"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "workQueueTableComponent"
    },
    {
        "id": "sd_dDbfpTXgPhDtu8Y1",
        "type": "PageCallService",
        "z": "sd_ORBEdSieDFflBBqS",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "outputs": 1,
        "isValidNode": true,
        "noerr": 0,
        "service": {
            "id": "sd_ORBEdSieDFflBBqS",
            "type": "tab",
            "createdDate": "2022-05-10T11:01:30.355Z",
            "label": "workQueueTable",
            "disabled": false,
            "info": "",
            "functionSeq": 0
        },
        "flow": {
            "flowId": "sd_wHdgOYnTLgQYYGG7",
            "flowName": "assignToUser"
        },
        "inputVariables": [
            {
                "key": "user",
                "map": true,
                "valueType": "bh.local",
                "value": "reassignUser"
            }
        ],
        "outputMapping": [],
        "serviceImportPath": "./workQueueTable",
        "startName": "assignToUser",
        "inputParams": [
            "bh.local.reassignUser"
        ],
        "accept_bh": false,
        "accept_csd": false,
        "functionName": "sd_dDbfpTXgPhDtu8Y1",
        "category": "General",
        "x": 685,
        "y": 1140,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    }
]

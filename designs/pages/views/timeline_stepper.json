[
    {
        "id": "sd_gCyX9KB6h1cWcta0",
        "type": "tab",
        "createdDate": "2022-03-25T11:37:23.171Z",
        "label": "timeline_stepper",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "timeline_stepperComponent"
    },
    {
        "id": "sd_8wg1bpa82HCcX31m",
        "type": "OnInit",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "start",
        "name": "",
        "inputVariables": [],
        "localVariables": [],
        "outputVariables": [],
        "functionName": "sd_8wg1bpa82HCcX31m",
        "category": "Lifecycle Events",
        "x": 45,
        "y": 60,
        "wires": [
            [
                "sd_lLrx3a5epAxXLdOw"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "timeline_stepperComponent"
    },
    {
        "id": "sd_lLrx3a5epAxXLdOw",
        "type": "PageVariables",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "set",
        "globalVariables": [
            {
                "textIp": "stepperIcon",
                "typedIpValue": {
                    "type": "bh",
                    "value": ""
                }
            },
            {
                "textIp": "states",
                "typedIpValue": {
                    "type": "bh",
                    "value": ""
                }
            },
            {
                "textIp": "timeline",
                "typedIpValue": {
                    "type": "literal",
                    "value": "[]"
                }
            }
        ],
        "functionName": "sd_lLrx3a5epAxXLdOw",
        "category": "Function",
        "x": 125,
        "y": 60,
        "wires": [
            [
                "sd_XiZPpTg9d6hLJebK"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_XiZPpTg9d6hLJebK",
        "type": "Script",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "page.stepperIcon = ['edit', 'done', 'number'];\n\npage.timelineData = [\n    {\n        \"3\": {\n            \"taskName\": \"Underwriter\",\n            \"taskDesc\": \"Underwriting for APPL12100000 by level UW_LEVEL_1\",\n            \"states\": [\n                {\n                    \"taskStatus\": \"ADDED\",\n                    \"actor\": \"system\",\n                    \"createdTime\": 1648444614167,\n                    \"endTime\": 1648444614181\n                },\n                {\n                    \"taskStatus\": \"STARTED\",\n                    \"actor\": \"krisv\",\n                    \"createdTime\": 1648444614167,\n                    \"endTime\": 1648446487560\n                }\n            ]\n        }\n    }\n];",
        "functionName": "sd_XiZPpTg9d6hLJebK",
        "category": "Function",
        "x": 205,
        "y": 60,
        "wires": [
            [
                "sd_WPY7XHqX9ifbvNng"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_AjmUbPOQDb974BPp",
        "type": "HttpRequest",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "",
        "method": "get",
        "methodMapping": "",
        "methodMappingObj": {},
        "urlMapping": "bh.url",
        "urlMappingObj": {
            "mapVarType": "bh",
            "mapVarValue": "url"
        },
        "ret": "json",
        "retMapping": "",
        "retMappingObj": {},
        "observe": "",
        "observeMapping": "",
        "observeMappingObj": {},
        "reportProgress": false,
        "withCreds": false,
        "reqBody": "",
        "reqBodyObj": {
            "mapVarType": "this.page",
            "mapVarValue": ""
        },
        "resultMapping": "this.page.timelineResult",
        "resultMappingObj": {
            "mapVarType": "this.page",
            "mapVarValue": "timelineResult"
        },
        "headers": {},
        "headersObj": [],
        "headerMapping": "",
        "headerMappingObj": {},
        "params": {},
        "paramsObj": [],
        "paramMapping": "",
        "paramMappingObj": {},
        "functionName": "sd_AjmUbPOQDb974BPp",
        "category": "HTTP",
        "x": 605,
        "y": 60,
        "wires": [
            [
                "sd_7eYRySQX0vCEJetf"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_9qrTPDbkvkaTdOQX",
        "type": "Script",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "flow",
        "name": "url constructor",
        "script": "// console.log('case---', bh.co);\npage.caseinfo = bh.co.case.caseDetails;\nbh.pid = bh.co.task['task-proc-inst-id'];\nbh.containerId = bh.co.task['task-container-id'];\n\nbh.url = page.system.environment.properties.ssdBaseUrl + '/case/audit/' + bh.pid + '/' + bh.containerId;",
        "functionName": "urlConstructor",
        "category": "Function",
        "x": 505,
        "y": 60,
        "wires": [
            [
                "sd_AjmUbPOQDb974BPp"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_WPY7XHqX9ifbvNng",
        "type": "UseDependency",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "client-pages",
        "nodeType": "flow",
        "name": "angular router",
        "inputs": 1,
        "outputs": 1,
        "property": "",
        "propertyType": "bh",
        "propertyGv": "bh.",
        "alias": "",
        "modules": [
            {
                "textIp": "ActivatedRoute",
                "typedIpValue": {
                    "type": "this.page",
                    "value": "activatedRoute"
                },
                "injectable": true
            }
        ],
        "import_all": false,
        "library": "@angular/router",
        "serviceDesignerType": "pages",
        "functionName": "angularRouter",
        "category": "Function",
        "x": 285,
        "y": 60,
        "wires": [
            [
                "sd_eRZl00k7ylM0vKKT"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_eRZl00k7ylM0vKKT",
        "type": "PageServiceVariables",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "pages",
        "nodeType": "flow",
        "name": "",
        "inputs": 1,
        "outputs": 1,
        "operation": "get",
        "globalVariables": [
            {
                "textIp": "checkedOut",
                "typedIpValue": {
                    "type": "bh",
                    "value": "co"
                }
            }
        ],
        "functionName": "sd_eRZl00k7ylM0vKKT",
        "service": {
            "id": "sd_RbD2RZwzan9VSOEL",
            "type": "tab",
            "createdDate": "2022-03-10T07:40:30.532Z",
            "label": "cache",
            "disabled": false,
            "info": "",
            "functionSeq": 0,
            "generateNext": true,
            "serviceName": "cache",
            "relativeParentPath": "",
            "_def": {
                "defaults": {
                    "label": {
                        "value": ""
                    },
                    "disabled": {
                        "value": false
                    },
                    "info": {
                        "value": ""
                    }
                }
            }
        },
        "serviceImportPath": "app/sd-services/cache",
        "category": "Function",
        "x": 385,
        "y": 60,
        "wires": [
            [
                "sd_9qrTPDbkvkaTdOQX"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_geuV7LT45sTvojJr",
        "type": "Script",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "if (page.timelineResult && Object.keys(page.timelineResult)?.length > 0) {\n    Object.keys(page.timelineResult).forEach((el, index) => {\n        page.timeline[index] = {};\n        console.log(index, el)\n        page.timeline[index]['taskName'] = page.timelineResult[el]?.taskName;\n        page.timeline[index]['taskDesc'] = page.timelineResult[el]?.taskDesc;\n        page.timeline[index]['startTime'] = page.timelineResult[el]?.states[0]?.createdTime\n        let lengthCa = page.timelineResult[el]?.states?.length;\n        if (lengthCa > 0) {\n            lengthCa = lengthCa - 1;\n        }\n        console.log(page.timeline[index]['startTime'], el)\n        page.timeline[index]['actor'] = page.timelineResult[el]?.states[lengthCa]?.actor;\n        let objStat = page.timelineResult[el]?.states?.find(obj => obj.taskStatus == 'COMPLETED')\n        if (objStat && Object.keys(objStat)?.length > 0) {\n            page.timeline[index]['endTime'] = objStat?.endTime;\n            page.timeline[index]['icon'] = 'check_circle';\n            page.timeline[index]['color'] = 'green';\n        } else {\n            page.timeline[index]['icon'] = 'donut_large';\n            page.timeline[index]['color'] = 'orange';\n        }\n    })\n}\npage.timeline.map(el => {\n    el['startTime'] = new Date(el['startTime']).toLocaleDateString() + ' ' + new Date(el['startTime']).toLocaleTimeString();\n    if (el['endTime']) {\n        el['endTime'] = new Date(el['endTime']).toLocaleDateString() + ' ' + new Date(el['endTime']).toLocaleTimeString();\n    }\n    return el;\n})",
        "functionName": "sd_geuV7LT45sTvojJr",
        "category": "Function",
        "x": 625,
        "y": 220,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true
    },
    {
        "id": "sd_cRfpUEoSAfZPHpqc",
        "type": "Script",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "console.log('timeline result', page.timelineResult);\n\nif (page.timelineResult && Object.keys(page.timelineResult)?.length > 0) {\n    Object.keys(page.timelineResult).forEach((el, index) => {\n        page.timeline[index] = {};\n        console.log(index, el);\n        page.timeline[index]['taskName'] = page.timelineResult[el]?.taskName;\n        page.timeline[index]['taskDesc'] = page.timelineResult[el]?.taskDesc;\n        page.timeline[index]['startTime'] = page.timelineResult[el]?.states[0]?.createdTime;\n        let lengthCa = page.timelineResult[el]?.states?.length;\n        if (lengthCa > 0) {\n            lengthCa = lengthCa - 1;\n        }\n        console.log(page.timeline[index], el);\n        page.timeline[index]['actor'] = page.timelineResult[el]?.states[lengthCa]?.actor;\n        let objStat = page.timelineResult[el]?.states?.find(obj => obj.taskStatus == 'COMPLETED')\n        if (objStat && Object.keys(objStat)?.length > 0) {\n            page.timeline[index]['endTime'] = objStat?.endTime;\n            //     page.timeline[index]['icon'] = 'check_circle';\n            //     page.timeline[index]['color'] = 'green';\n        }\n        // else {\n        //     page.timeline[index]['icon'] = 'donut_large';\n        //     page.timeline[index]['color'] = 'orange';\n        // }\n    })\n}\nconsole.log('before--',page.timeline);\npage.timeline.map(el => {\n    el['startTime'] = new Date(el['startTime']).toLocaleDateString() + ' ' + new Date(el['startTime']).toLocaleTimeString();\n    if (el['endTime']) {\n        el['endTime'] = new Date(el['endTime']).toLocaleDateString() + ' ' + new Date(el['endTime']).toLocaleTimeString();\n    }\n    return el;\n});\n\nconsole.log('after--',page.timeline);\n",
        "functionName": "sd_cRfpUEoSAfZPHpqc",
        "category": "Function",
        "x": 445,
        "y": 200,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true
    },
    {
        "id": "sd_7eYRySQX0vCEJetf",
        "type": "Script",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "// console.log('timeline result', page.timelineResult);\npage.states = [];\n\nif (page.timelineResult && Object.keys(page.timelineResult)?.length > 0) {\n    // console.log(Object.keys(page.timelineResult));\n    Object.keys(page.timelineResult).forEach((el, index) => {\n        // console.log(el, index);\n        page.timeline[index] = {};\n        page.timeline[index]['states'] = page.timelineResult[el]?.states;\n        page.timeline[index]['states'].forEach(state => {\n            state['taskName'] = page.timelineResult[el]?.taskName;\n            state['taskDesc'] = page.timelineResult[el]?.taskDesc;\n            state['createdTime'] = new Date(state.createdTime);\n            state['startTime'] = new Date(state.createdTime).toLocaleDateString() + ' ' + new Date(state.createdTime).toLocaleTimeString();\n            if (state['endTime']) {\n                state['endTime'] = new Date(state['endTime']).toLocaleDateString() + ' ' + new Date(state['endTime']).toLocaleTimeString();\n            }\n            // console.log('state--', state);\n        });\n        // console.log(page.timeline);\n    });\n}",
        "functionName": "sd_7eYRySQX0vCEJetf",
        "category": "Function",
        "x": 725,
        "y": 60,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    },
    {
        "id": "sd_0TtDIJW4JPXSm1Ud",
        "type": "PageStart",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "pages",
        "nodeType": "start",
        "name": "getStates",
        "outputs": 1,
        "inputVariables": [],
        "localVariables": [
            {
                "key": "states",
                "defaultValue": {
                    "type": "any",
                    "value": ""
                },
                "output": true
            }
        ],
        "flow_type": "sync",
        "functionName": "getStates",
        "category": "General",
        "x": 80,
        "y": 360,
        "wires": [
            [
                "sd_olyOyiYt6mNXNg7c"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "timeline_stepperComponent"
    },
    {
        "id": "sd_olyOyiYt6mNXNg7c",
        "type": "Script",
        "z": "sd_gCyX9KB6h1cWcta0",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "page.timeline.forEach(el => bh.local.states = el.states);",
        "functionName": "sd_olyOyiYt6mNXNg7c",
        "category": "Function",
        "x": 220,
        "y": 360,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "generated": true
    }
]
